FROM krallin/ubuntu-tini:16.04
#FROM phusion/baseimage:0.10.1
LABEL maintainer.1.name="Alexander Scholz" \
      maintainer.1.email="alexander.scholz@izi.fraunhofer.de" \
      maintainer.2.name="Christoph KÃ¤mpf" \
      maintainer.2.email="christoph.kaempf@izi.fraunhofer.de"

#############################
# Software Versions Section #
#############################

#################################
# Software Installation Section #
#################################
RUN apt-get update && apt-get install -y \
    bash-completion \
    bzip2 \
    curl \
    emacs \
    git \
    graphviz \
    g++ \
    libncurses5-dev \
    libz-dev \
    make \
    pigz \
    python-dev \
    python-virtualenv \
    unzip \
    vim \
    wget \
    zlib1g-dev

# Clean up APT when done.
USER root
RUN apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Create user 'uap_user'
RUN useradd -ms /bin/bash uap_user
USER uap_user

###############################################################################
# Install required bioinformatic tools
###############################################################################

# Create required directories

RUN mkdir -p \
    /home/uap_user/bioinformatic-tools

###############################################################################
# Install bowtie2 (version: 2.2.9)
###############################################################################

RUN mkdir -p /home/uap_user/bioinformatic-tools/bowtie2
WORKDIR /home/uap_user/bioinformatic-tools/bowtie2
RUN wget https://github.com/BenLangmead/bowtie2/releases/download/v2.2.9/bowtie2-2.2.9-source.zip && \
    unzip bowtie2-2.2.9-source.zip && \
    rm bowtie2-2.2.9-source.zip && \
    cd /home/uap_user/bioinformatic-tools/bowtie2/bowtie2-2.2.9 && \
    make
ENV PATH /home/uap_user/bioinformatic-tools/bowtie2/bowtie2-2.2.9:$PATH

###############################################################################
# Install bwa (version: 0.7.15)
###############################################################################

RUN mkdir -p /home/uap_user/bioinformatic-tools/bwa
WORKDIR /home/uap_user/bioinformatic-tools/bwa
RUN wget https://github.com/lh3/bwa/releases/download/v0.7.15/bwa-0.7.15.tar.bz2 && \
    tar -xjf bwa-0.7.15.tar.bz2 && \
    rm bwa-0.7.15.tar.bz2
WORKDIR /home/uap_user/bioinformatic-tools/bwa/bwa-0.7.15
RUN make
ENV PATH /home/uap_user/bioinformatic-tools/bwa/bwa-0.7.15:$PATH

###############################################################################
# Install samtools (version: 1.3.1)
###############################################################################

RUN mkdir -p /home/uap_user/bioinformatic-tools/samtools
WORKDIR /home/uap_user/bioinformatic-tools/samtools
RUN wget https://github.com/samtools/samtools/releases/download/1.3.1/samtools-1.3.1.tar.bz2 && \
    tar -xjf samtools-1.3.1.tar.bz2 && \
    rm samtools-1.3.1.tar.bz2
WORKDIR /home/uap_user/bioinformatic-tools/samtools/samtools-1.3.1
RUN ./configure && \
    make

# switch to root-user for install
USER root
RUN make install

USER uap_user
ENV PATH /home/uap_user/bioinformatic-tools/samtools/samtools-1.3.1:$PATH

###############################################################################
# Install segemehl (version: 0.2.0)
###############################################################################

RUN mkdir -p /home/uap_user/bioinformatic-tools/segemehl
WORKDIR /home/uap_user/bioinformatic-tools/segemehl
RUN wget http://www.bioinf.uni-leipzig.de/Software/segemehl/segemehl_0_2_0.tar.gz && \
    tar -xzf segemehl_0_2_0.tar.gz && rm segemehl_0_2_0.tar.gz
WORKDIR /home/uap_user/bioinformatic-tools/segemehl/segemehl_0_2_0/segemehl
RUN make
ENV PATH /home/uap_user/bioinformatic-tools/segemehl/segemehl_0_2_0/segemehl:$PATH

###############################################################################
# Install fetchChromSizes
###############################################################################

RUN mkdir -p /home/uap_user/bioinformatic-tools/fetchChromSizes
WORKDIR /home/uap_user/bioinformatic-tools/fetchChromSizes
RUN wget https://raw.githubusercontent.com/ucscGenomeBrowser/kent/master/src/utils/userApps/fetchChromSizes && \
    chmod u+x fetchChromSizes
ENV PATH /home/uap_user/bioinformatic-tools/fetchChromSizes:$PATH

###############################################################################
# install uap
###############################################################################

RUN mkdir -p /home/uap_user/uap
WORKDIR /home/uap_user/uap
RUN git clone https://github.com/yigbt/uap.git . && \
    ./bootstrap.sh
ENV PATH /home/uap_user/uap:$PATH

###############################################################################
# Prepare stuff for uap example workflows
###############################################################################

# Create directories required by uap example workflows

RUN mkdir -p \
    /home/uap_user/uap/example-configurations/genomes/bacteria/Mycoplasma_genitalium \
    /home/uap_user/uap/example-configurations/genomes/animalia/chordata/mammalia/primates/homo_sapiens/gencode \
    /home/uap_user/uap/example-configurations/genomes/animalia/chordata/mammalia/primates/homo_sapiens/hg19/chromosome_sizes \
    /home/uap_user/uap/example-configurations/genomes/animalia/chordata/mammalia/primates/homo_sapiens/hg19/fasta \
    /home/uap_user/uap/example-configurations/example-out/2007-Barski_et_al_download \
    /home/uap_user/uap/example-configurations/example-out/2007-Barski_et_al \
    /home/uap_user/uap/example-configurations/example-out/2014-Mercer_et_al_download \
    /home/uap_user/uap/example-configurations/example-out/2014-Mercer_et_al

WORKDIR /home/uap_user/uap/example-configurations/
RUN uap index_homo_sapiens_hg19_chr21.yaml run-locally
RUN uap download_human_gencode_release.yaml run-locally

# switch to user and directory
WORKDIR /home/uap_user
# Enable git shell completion and advanced styling
RUN git clone https://github.com/magicmonty/bash-git-prompt.git .bash-git-prompt --depth=1
COPY docker-uap.bashrc /home/uap_user/.bashrc
COPY docker-uap.README /home/uap_user/README


# Use baseimage-docker's init system.
ENTRYPOINT ["/usr/local/bin/tini", "--", "/bin/bash"]
